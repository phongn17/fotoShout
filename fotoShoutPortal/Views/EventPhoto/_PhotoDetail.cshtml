@model FotoShoutData.Models.PhotoDetailsTDO

@{
    var image = !string.IsNullOrEmpty(Model.Thumbnail) ? Model.Thumbnail : null;
    var publishingStatus = @Model.Status == 4 ? "Published" : ((@Model.Status == 3) ? "Pending publish" : (!string.IsNullOrEmpty(Model.Error) ? "Failed" : "Not publish yet / Unauthorized"));
}

<table cellpadding="0" cellspacing="0" class="tbl-photo-detail">
    <tr>
        <td>
            <div class="thumb-frame">
                <img src="@image" alt="Photo Thumbnail" />
            </div>
        </td>
        <td>
            <div class="detail-frame">
                <table>
                    <tr class="detail-item">
                        <td>File Name:</td><td>@Model.Filename.ToString()</td>
                    </tr>
                    <tr class="detail-item">
                        <td>Submitted:</td><td>@Model.Submitted.ToString()</td>
                    </tr>
                    <tr class="detail-item">
                        <td>Publishing Status:</td>
                        <td>
                            @if (!publishingStatus.Equals("Failed", StringComparison.InvariantCultureIgnoreCase)) {
                                @publishingStatus
                            }
                            else {
                                @Html.Label("", publishingStatus, new { @class="error linkHover", title = Model.Error });
                            }
                        </td>
                    </tr>
                    <tr class="detail-item">
                        <td>Guest(s):</td>
                        <td>
                            @if (Model.Guests != null && Model.Guests.Count() > 0) {
                                for (var idx = 0; idx < Model.Guests.Count(); idx++) {
                                    FotoShoutData.Models.GuestTDO guest = @Model.Guests.ElementAt(idx);
                                    <div class="email"><span>@guest.Email</span>
                                    @if (guest.AuthorizePublish) {
                                        <img src="~/Images/icons/checked01.png" alt="Authorizing indication" class="vmiddle"/>
                                    }
                                    </div>
                                }
                            }
                            else {
                                <span>No guest</span>
                            }
                        </td>
                    </tr>
                    @if (!string.IsNullOrEmpty(Model.PermaLinks)) {
                    <tr class="detail-item">
                        <td>Published Links:</td>
                        <td>
                        @{
                        string[] thumbnails = Model.Thumbnails.Split('|');
                            string[] permaLinks = Model.PermaLinks.Split('|');
                            int idx = 0;
                            foreach (string permaLink in permaLinks) {
                                string thumbnail = thumbnails[idx++];
                                <a href="@permaLink" target="_blank"><img src="@thumbnail" alt="Social site thumbnail" class="vmiddle icon_30"/></a>
                            }
                        }
                        </td>
                    </tr>
                    }
                </table>
            </div>
        </td>
    </tr>
</table>
